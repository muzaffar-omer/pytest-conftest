[tox]
envlist = black, flake8, pylint, mypy, flake8_tests, pylint_tests, py36

[testenv]
deps =
    pytest
    requests-mock
commands = pytest {posargs:-v -rs --color=yes tests/unit --rootdir tests/unit}
passenv =
    PROGRAMFILES


[testenv:black]
basepython = python3.6
deps =
    black==19.3b0
    certifi==2018.11.29
commands = black --check src/pix4dengine tests code_samples docs/source/conf.py setup.py conanfile.py perftracker
setenv =
    LC_ALL = C.UTF-8
    LANG = C.UTF-8


# Linters
[testenv:flake8]
basepython = python3.6
skip_install = false
deps =
    flake8==3.6.0
    pep8-naming==0.7.0
    flake8-colors==0.1.6
    flake8-docstrings==1.3.0
    flake8-quotes==1.0.0
    certifi==2018.11.29
    pydocstyle==3.0.0
commands =
    flake8 src/pix4dengine/ setup.py

[testenv:flake8_tests]
basepython = python3.6
deps =
    flake8==3.6.0
    pep8-naming==0.7.0
    flake8-colors==0.1.6
    flake8-quotes==1.0.0
    certifi==2018.11.29
commands =
    flake8 tests/unit/
    flake8 --extend-ignore=Q000 tests/functional/
    flake8 --extend-ignore=F401,F841,D401 tests/integration/
    flake8 --extend-ignore=D401,E402 code_samples/
    flake8 perftracker/

[testenv:pylint]
basepython = python3.6
deps =
    pylint==1.9.4
    certifi==2018.11.29
commands = pylint src/pix4dengine/ setup.py

[testenv:pylint_tests]
basepython = python3.6
deps =
    pylint==1.9.4
    pytest==4.1.1
    attrs==19.1.0
    certifi==2018.11.29
commands = pylint -E tests/
           pylint -E --disable=C0413,W0404,C0103 code_samples/
           pylint -E perftracker/

[testenv:docs]
basepython = python3.6
skip_install = false
deps =
    sphinx==1.8.3
    sphinx_rtd_theme==0.4.2
    sphinx_autodoc_typehints==1.6.0
    rinohtype==0.3.1
    certifi==2018.11.29
whitelist_externals =
    make
    env
changedir = docs/
commands =
    pip install  {toxinidir}/sphinx_pix4d_theme/
    sphinx-build -M html source/ build/ -n -W
passenv =
    ENGINE_INSTALL_DIR

[testenv:mypy]
basepython = python3.6
deps =
    mypy==0.650
    certifi==2018.11.29
commands = mypy src/pix4dengine --ignore-missing-imports

[testenv:auth_integration_tests]
envlist = exports
basepython = python3.6
deps =
    pytest==4.1.1
    attrs==19.1.0
    certifi==2018.11.29
commands = pytest {posargs:-v -rs --color=yes tests/integration/auth}
passenv =
    ENGINE_AUTH_TEST_ACCOUNT_EMAIL
    ENGINE_AUTH_TEST_ACCOUNT_PASSWORD
    ENGINE_INSTALL_DIR
    APPDATA

[testenv:pyengine]
envlist = exports
basepython = python3.6
deps =
    cmake==3.13.3
    pytest==4.1.1
    pyyaml==5.2
    pillow==6.2.1
    attrs==19.1.0
    certifi==2018.11.29
commands = pytest {posargs:-v -rs --color=yes libs/pyengine/tests}
passenv =
    ENGINE_INSTALL_DIR
    APP_DATA

[testenv:integration_tests]
envlist = exports
basepython = python3.6
deps =
    pytest==4.1.1
    attrs==19.1.0
    certifi==2018.11.29
commands = pytest {posargs:-v -rs --color=yes --ignore=tests/integration/auth tests/integration}
passenv =
    ENGINE_TEST_DATA
    ENGINE_TEST_ACCOUNT_EMAIL
    ENGINE_TEST_ACCOUNT_PASSWORD
    ENGINE_TEST_ACCOUNT_LICENSE_KEY
    ENGINE_INSTALL_DIR
    APPDATA

[testenv:code_samples]
envlist = exports
basepython = python3.6
deps =
    pytest==4.1.1
    attrs==19.1.0
    certifi==2018.11.29
commands = pytest {posargs:-v -rs --color=yes code_samples}
passenv =
    ENGINE_TEST_DATA
    ENGINE_TEST_ACCOUNT_EMAIL
    ENGINE_TEST_ACCOUNT_PASSWORD
    ENGINE_TEST_ACCOUNT_LICENSE_KEY
    ENGINE_INSTALL_DIR
    APPDATA

[testenv:functional_tests]
envlist = exports
basepython = python3.6
deps =
    pytest==4.1.1
    attrs==19.1.0
    pytest-bdd==3.0.1
    certifi==2018.11.29
commands = pytest {posargs:-v -rs --color=yes tests/functional}
passenv =
    ENGINE_TEST_DATA
    ENGINE_TEST_ACCOUNT_EMAIL
    ENGINE_TEST_ACCOUNT_PASSWORD
    ENGINE_TEST_ACCOUNT_LICENSE_KEY
    ENGINE_INSTALL_DIR

[testenv:perftracker_tests]
envlist = exports
basepython = python3.6
deps =
    pytest==4.1.1
    attrs==19.1.0
    certifi==2018.11.29
commands = pytest {posargs:-v -rs --color=yes perftracker/tests}
passenv =
    ENGINE_TEST_DATA
    ENGINE_TEST_ACCOUNT_EMAIL
    ENGINE_TEST_ACCOUNT_PASSWORD
    ENGINE_TEST_ACCOUNT_LICENSE_KEY
    ENGINE_INSTALL_DIR
    APPDATA

#flake8 configuration
[flake8]
max-line-length = 100
ignore = D107, D202, D301, D401, E252, E501, W503, W504
format = ${cyan}%(path)s${reset}:${yellow_bold}%(row)d${reset}:${green_bold}%(col)d${reset}: ${red_bold}%(code)s${reset} %(text)s
inline-quotes = double

# pytest configuration
[pytest]
empty_parameter_set_mark = fail_at_collect
